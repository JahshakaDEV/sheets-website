{"version":3,"sources":["Services/SongListService.js","components/Atoms/ShowDifficulty/ShowDifficulty.jsx","components/Atoms/SongDisplayList/SongDisplayList.jsx","components/Atoms/Thumbnail/Thumbnail.jsx","components/Molecules/LinkInput/LinkInput.jsx","components/Organism/SongDisplay/SongDisplay.jsx","components/Atoms/RandomSongButton/RandomSongButton.jsx","components/Molecules/Search/Search.jsx","components/Molecules/SongPreview/SongPreview.jsx","components/Organism/LandingPage/LandingPage.jsx","components/Organism/AddSongScreen/AddSongScreen.jsx","components/Molecules/SongList/SongList.jsx","components/Organism/AllSongsOverview/AllSongsOverview.jsx","components/Organism/Overview/Overview.jsx","App.js","reportWebVitals.js","index.js"],"names":["checkIfSongInList","song","songList","index","indexOf","map","songs","title","interpret","SongListService","getIntialList","JSON","parse","window","localStorage","getItem","setItem","updateSongList","stringify","deleteSong","splice","getRandomSongs","count","randomSongs","allSongs","i","randomIndex","Math","floor","random","length","randomSong","changeFieldValue","fieldToEdit","value","difficulty","parseInt","notes","addLink","link","type","youtube","sheetMusic","songListSizeLandingPageCheck","ShowDifficulty","editMode","useState","difficultyState","setDifficultyState","className","score","onClick","event","preventDefault","SongDisplayList","array","shorten","characters","shortenString","string","toString","substring","href","startsWith","target","rel","Thumbnail","id","isLink","videoURL","replace","src","alt","LinkInput","setValueInput","valueInput","validFunction","validCheckerFunction","invalidFunction","invalidLink","elementID","onChange","document","getElementById","style","display","SongDisplay","songProp","setSelectedSong","setShowList","backToList","videoIDs","setVideoIDs","loadedVideos","setLoadedVideos","setEditMode","youtubeValue","setYoutubeValue","sheetsValue","setSheetsValue","invalidYTLink","setInvalidYTLink","invalidURL","setInvalidURL","setNotes","getWindowDimensions","windowDimensions","setWindowDimensions","width","innerWidth","height","innerHeight","isValidYouTubeLink","url","p","match","isValidURL","str","pattern","RegExp","test","invalidAdd","console","log","useEffect","handleResize","addEventListener","removeEventListener","forEach","name","defaultValue","RandomSongButton","setListView","setBackToList","setSearchValue","Search","hideButtons","setAddScreen","autoFocus","placeholder","SongPreview","key","LandingPage","AddSongScreen","setAddSong","addSongHandler","setTitle","setinterpret","setDifficulty","isReady","setIsReady","onSubmit","marginBottom","visibility","SongList","color","backgroundColor","tableRow","AllSongsOverview","setShowListView","setShowAddScreen","searchValue","aFocus","Overview","songListProp","songListSearch","setSongListSearch","selectedSong","showListView","showAddScreen","setSongList","filteredSongList","localSearchValue","toLowerCase","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initial","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81b14850.chunk.js","sourcesContent":["function checkIfSongInList(song, songList) {\r\n    let index = -1;\r\n    index = songList.indexOf(song);\r\n    if (index !== -1) {\r\n        return index;\r\n    } else {\r\n        // eslint-disable-next-line\r\n        songList.map(songs => {\r\n            if (songs.title === song.title && songs.interpret === song.interpret) {\r\n                index = songList.indexOf(songs);\r\n            }\r\n        })\r\n        if (index !== -1) {\r\n            return index;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const SongListService = {\r\n    getIntialList: () => {\r\n        if (JSON.parse(window.localStorage.getItem('songList')) !== null) {\r\n            return JSON.parse(window.localStorage.getItem('songList'))\r\n        } else {\r\n            window.localStorage.setItem('songList', \"[{\\\"title\\\":\\\"Megalovania\\\",\\\"interpret\\\":\\\"Toby Fox\\\",\\\"difficulty\\\":3,\\\"youtube\\\":[\\\"https://www.youtube.com/watch?v=SWKR0BzL_z0\\\",\\\"https://www.youtube.com/watch?v=xzwTirMaAkY\\\"],\\\"sheetMusic\\\":[\\\"https://drive.google.com/file/d/1k0RR5NuzhwTikiprz30okoAMR9wcPfHy/view\\\"],\\\"notes\\\":\\\"\\\"}]\")\r\n            return JSON.parse(window.localStorage.getItem('songList'));\r\n        }\r\n    },\r\n\r\n    updateSongList: (songList) => {\r\n        window.localStorage.setItem('songList', JSON.stringify(songList));\r\n    },\r\n\r\n\r\n    deleteSong: (song) => {\r\n        let songList = SongListService.getIntialList();\r\n        let index = checkIfSongInList(song, songList);\r\n        if (index !== false) {\r\n            songList.splice(index, 1);\r\n            SongListService.updateSongList(songList);\r\n        }\r\n    },\r\n\r\n    getRandomSongs: (count) => {\r\n        let randomSongs = [];\r\n        const allSongs = JSON.parse(window.localStorage.getItem('songList'));\r\n        for (let i = 0; i < count; i++) {\r\n            const randomIndex = Math.floor(Math.random() * allSongs.length);\r\n            const randomSong = allSongs[randomIndex];\r\n            randomSongs = [...randomSongs, randomSong]\r\n            allSongs.splice(randomIndex, 1);\r\n        }\r\n        return randomSongs;\r\n    },\r\n\r\n    changeFieldValue: (song, fieldToEdit, value) => {\r\n        if (fieldToEdit === \"title\" || \"interpret\" || \"difficulty\" || \"notes\") {\r\n            let songList = SongListService.getIntialList();\r\n            let index = checkIfSongInList(song, songList);\r\n            if (index !== false) {\r\n                songList.splice(index, 1);\r\n                switch (fieldToEdit) {\r\n                    case \"title\":\r\n                        song.title = value;\r\n                        songList = [...songList, song];\r\n                        SongListService.updateSongList(songList);\r\n                        break;\r\n\r\n                    case \"interpret\":\r\n                        song.interpret = value;\r\n                        songList = [...songList, song];\r\n                        SongListService.updateSongList(songList);\r\n                        break;\r\n\r\n                    case \"difficulty\":\r\n                        song.difficulty = parseInt(value);\r\n                        songList = [...songList, song];\r\n                        SongListService.updateSongList(songList);\r\n                        break;\r\n\r\n                    case \"notes\":\r\n                        song.notes = value;\r\n                        songList = [...songList, song];\r\n                        SongListService.updateSongList(songList);\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    addLink: (song, link, type) => {\r\n        let songList = SongListService.getIntialList();\r\n        let index = checkIfSongInList(song, songList);\r\n        songList.splice(index, 1);\r\n        if (index !== false) {\r\n            if (type === \"yt\") {\r\n                song.youtube = [...song.youtube, link]\r\n                songList = [...songList, song]\r\n                SongListService.updateSongList(songList);\r\n\r\n            } else {\r\n                song.sheetMusic = [...song.sheetMusic, link]\r\n                songList = [...songList, song]\r\n                SongListService.updateSongList(songList);\r\n\r\n            }\r\n        }\r\n    },\r\n\r\n    songListSizeLandingPageCheck: () => {\r\n        if (SongListService.getIntialList().length >= 6) {\r\n            return 6;\r\n        } else {\r\n            return SongListService.getIntialList().length;\r\n        }\r\n    }\r\n\r\n}\r\n","import \"./ShowDifficulty.css\";\r\nimport {useState} from \"react\";\r\nimport {SongListService} from \"../../../Services/SongListService\";\r\n\r\nfunction ShowDifficulty({difficulty, editMode, song}) {\r\n\r\n    const [difficultyState, setDifficultyState] = useState(difficulty);\r\n\r\n    if (editMode) {\r\n        return (<div className={\"show__difficulty\"}>\r\n            {\r\n                [1, 2, 3, 4, 5].map(score => {\r\n                    if (score <= difficultyState) {\r\n                        return <p key={score} className={\"difficulty__star\"}\r\n                                  onClick={event => {\r\n                                      event.preventDefault();\r\n                                      setDifficultyState(score);\r\n                                      SongListService.changeFieldValue(song, \"difficulty\", score);\r\n                                  }\r\n                                  }>★</p>\r\n                    } else {\r\n                        return <p key={score} className={\"difficulty__star\"}\r\n                                  onClick={event => {\r\n                                      event.preventDefault();\r\n                                      setDifficultyState(score);\r\n                                      SongListService.changeFieldValue(song, \"difficulty\", score);\r\n                                  }\r\n                                  }>☆</p>;\r\n                    }\r\n                })\r\n            }\r\n        </div>)\r\n    } else {\r\n        return (\r\n            <div className={\"show__difficulty\"}>\r\n                {\r\n                    [1, 2, 3, 4, 5].map(score => {\r\n                        if (score <= difficultyState) {\r\n                            return <p key={score} className={\"difficulty__star\"}>★</p>;\r\n                        } else {\r\n                            return <p key={score} className={\"difficulty__star\"}>☆</p>;\r\n                        }\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowDifficulty;","function SongDisplayList({array, shorten, characters}) {\r\n\r\n    if (!shorten) {\r\n        return (\r\n            <ul className=\"songdisplay__list\">\r\n                {array.map(link =>\r\n                    <li key={link}><a href={link} target={\"_blank\"} rel={\"noreferrer\"}>{link}</a></li>\r\n                )}\r\n            </ul>\r\n        );\r\n    } else {\r\n        function shortenString(string, characters) {\r\n            if (string.length < characters) {\r\n                return string;\r\n            } else {\r\n                string = string.toString().substring(0, characters - 4) + \"...\";\r\n                return string;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <ul className=\"songdisplay__list\">\r\n                {array.map(link =>\r\n                    <li key={link}><a href={link.startsWith(\"http\") ? link : \"//\" + link} target={\"_blank\"}\r\n                                      rel={\"noreferrer\"}>{shortenString(link, characters)}</a></li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SongDisplayList;","function Thumbnail({song, isLink}) {\r\n    let id;\r\n    if (song.youtube.length > 0) {\r\n        let videoURL = song.youtube[0].toString();\r\n        videoURL = videoURL.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(\"www.\", \"\").replace(\"youtu.be/\", \"\")\r\n            .replace(\"youtube.com/watch?v=\", \"\");\r\n        id = videoURL;\r\n    } else {\r\n        id = \"noThumbnail\"\r\n    }\r\n\r\n    if (id === \"noThumbnail\") {\r\n        return <img src={\"https://via.placeholder.com/1920x1080?text=Kein Vorschaubild verfügbar!\"} alt={\"\"}/>\r\n    } else {\r\n        if (isLink) {\r\n            return (\r\n                <a href={\r\n                    \"https://youtu.be/\" + id} target={\"_blank\"} rel={\"noreferrer\"}>\r\n                    <img alt=\"\" src={\"https://img.youtube.com/vi/\" + id + \"/maxresdefault.jpg\"}/>\r\n                </a>\r\n            )\r\n        } else {\r\n            return (\r\n                <img alt=\"\" src={\"https://img.youtube.com/vi/\" + id + \"/maxresdefault.jpg\"}/>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Thumbnail;","function LinkInput({\r\n                       editMode,\r\n                       className,\r\n                       setValueInput,\r\n                       valueInput,\r\n                       validFunction,\r\n                       validCheckerFunction,\r\n                       invalidFunction,\r\n                       invalidLink,\r\n                       elementID\r\n                   }) {\r\n\r\n    return (\r\n        <div className={editMode ? className.toString() : \"hide \" + className.toString()}>\r\n            <input id={elementID} onChange={event => {\r\n                setValueInput(event.target.value)\r\n            }\r\n            } type={\"text\"}/>\r\n            <button onClick={event => {\r\n                if (validCheckerFunction(valueInput)) {\r\n                    validFunction();\r\n                    setValueInput(\"\");\r\n                    document.getElementById(elementID).value = \"\";\r\n                } else {\r\n                    invalidFunction();\r\n                }\r\n            }}>Hinzufügen\r\n            </button>\r\n            <span style={invalidLink ? {} : {display: \"none\"}}>Invalide URL!</span>\r\n        </div>)\r\n}\r\n\r\nexport default LinkInput;","import \"./SongDisplay.css\"\r\nimport ShowDifficulty from \"../../Atoms/ShowDifficulty/ShowDifficulty\";\r\nimport {useEffect, useState} from \"react\";\r\nimport SongDisplayList from \"../../Atoms/SongDisplayList/SongDisplayList\";\r\nimport Thumbnail from \"../../Atoms/Thumbnail/Thumbnail\";\r\nimport LinkInput from \"../../Molecules/LinkInput/LinkInput\";\r\nimport {SongListService} from \"../../../Services/SongListService\";\r\n\r\nfunction SongDisplay({songProp, setSelectedSong, setShowList, backToList}) {\r\n\r\n    const song = songProp;\r\n    const [videoIDs, setVideoIDs] = useState([]);\r\n    const [loadedVideos, setLoadedVideos] = useState(false);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [youtubeValue, setYoutubeValue] = useState(\"\");\r\n    const [sheetsValue, setSheetsValue] = useState(\"\");\r\n    const [invalidYTLink, setInvalidYTLink] = useState(false);\r\n    const [invalidURL, setInvalidURL] = useState(false);\r\n    const [notes, setNotes] = useState(songProp.notes);\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    function getWindowDimensions() {\r\n        const {innerWidth: width, innerHeight: height} = window;\r\n        return {width, height};\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        document.title = song.title + \" - \" + song.interpret;\r\n        return () => window.removeEventListener('resize', handleResize);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    function getVideoIDs() {\r\n        song.youtube.forEach(videoURL => {\r\n            videoURL = videoURL.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(\"www.\", \"\").replace(\"youtu.be/\", \"\").replace(\"youtube.com/watch?v=\", \"\")\r\n            setVideoIDs([...videoIDs, videoURL]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * JavaScript function to match (̶a̶n̶d̶ ̶r̶e̶t̶u̶r̶n̶)̶ the video Id\r\n     * of any valid Youtube Url, given as input string.\r\n     * @author: Stephan Schmitz <eyecatchup@gmail.com>\r\n     * @url: https://stackoverflow.com/a/10315969/624466\r\n     */\r\n    function isValidYouTubeLink(url) {\r\n        const p = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n        if (url !== \"\") {\r\n            setInvalidYTLink(!url.match(p))\r\n            return !!(url.match(p));\r\n        } else {\r\n            setInvalidYTLink(false);\r\n            return !!(url.match(p));\r\n        }\r\n\r\n    }\r\n\r\n    function isValidURL(str) {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        if (str !== \"\") {\r\n            setInvalidURL(!pattern.test(str));\r\n            return !!pattern.test(str);\r\n        } else {\r\n            setInvalidURL(false);\r\n            return !!pattern.test(str);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        isValidYouTubeLink(youtubeValue);\r\n    }, [youtubeValue])\r\n\r\n    useEffect(() => {\r\n        isValidURL(sheetsValue);\r\n    }, [sheetsValue])\r\n\r\n    useEffect(() => {\r\n        if (videoIDs.length <= 0) {\r\n            setLoadedVideos(false);\r\n        } else {\r\n            setLoadedVideos(true);\r\n        }\r\n    }, [videoIDs])\r\n\r\n    useEffect(() => {\r\n        getVideoIDs();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        SongListService.changeFieldValue(song, \"notes\", notes);\r\n        // eslint-disable-next-line\r\n    }, [notes])\r\n\r\n    function validYTAdd() {\r\n        SongListService.addLink(song, youtubeValue, \"yt\");\r\n    }\r\n\r\n    function invalidAdd() {\r\n        console.log(\"invalid add\");\r\n    }\r\n\r\n    function validURLAdd() {\r\n        SongListService.addLink(song, sheetsValue, \"url\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const {height, width} = windowDimensions;\r\n    let characters = 50;\r\n    if (width < 1000) {\r\n        characters = 32;\r\n    }\r\n    return <div className=\"songdisplay\">\r\n        <div className={\"songdisplay__top\"}>\r\n            <div className=\"songdisplay__header\">\r\n                <h1 id={\"button\"} onClick={() => {\r\n                    if (backToList) {\r\n                        setSelectedSong(null);\r\n                        setShowList(true);\r\n                    } else {\r\n                        setSelectedSong(null);\r\n                        setShowList(false)\r\n                    }\r\n\r\n                }\r\n                }>←</h1>\r\n                <div className={\"songdisplay__header__infos\"}>\r\n                    <h1>{song.title} - </h1>\r\n                    <h1>{song.interpret}</h1>\r\n                </div>\r\n                {/*TODO: Icons?*/}\r\n                <div className={\"songdisplay__header__icons\"}>\r\n                    <p onClick={event => {\r\n                        event.preventDefault();\r\n                        setEditMode(!editMode)\r\n                    }\r\n                    }>✏</p>\r\n                    <p onClick={event => {\r\n                        event.preventDefault();\r\n                        setShowList(false);\r\n                        SongListService.deleteSong(song);\r\n                        setSelectedSong(null);\r\n\r\n                    }\r\n                    } id={\"icon__trash\"}>🗑</p>\r\n                </div>\r\n            </div>\r\n            <div className={\"songdisplay__youtube\"}>\r\n                <div className={\"songdisplay__youtube__left\"}>\r\n                    {loadedVideos ?\r\n                        <Thumbnail song={song} isLink={true}/> :\r\n                        <img alt={\"\"} src={\"https://via.placeholder.com/1920x1080?text=Kein Vorschaubild verfügbar!\"}/>}\r\n                </div>\r\n                <div className={\"songdisplay__youtube__right\"}>\r\n                    <h2>Weitere Videos:</h2>\r\n                    <SongDisplayList array={songProp.youtube} shorten={false}/>\r\n                    <LinkInput editMode={editMode} className={\"add__youtube\"} setValueInput={setYoutubeValue}\r\n                               valueInput={youtubeValue} validFunction={validYTAdd}\r\n                               validCheckerFunction={isValidYouTubeLink} invalidFunction={invalidAdd}\r\n                               invalidLink={invalidYTLink} elementID={\"add__youtube__input\"}/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={\"songdisplay__bottom\"}>\r\n            <div className={\"songdisplay__infos\"}>\r\n                <div className={\"songdisplay__infos__left\"}>\r\n                    <div className={\"songdisplay__sheets\"}>\r\n                        <h2>Noten:</h2>\r\n                        <SongDisplayList shorten={true} characters={characters} array={songProp.sheetMusic}/>\r\n                        <LinkInput editMode={editMode} className={\"add__sheets\"} setValueInput={setSheetsValue}\r\n                                   valueInput={sheetsValue} validFunction={validURLAdd}\r\n                                   validCheckerFunction={isValidURL}\r\n                                   invalidFunction={invalidAdd} invalidLink={invalidURL}\r\n                                   elementID={\"add__sheets__input\"}/>\r\n                    </div>\r\n                    <div className={\"songdisplay__difficulty\"}>\r\n                        <h2 id={editMode ? \"edit\" : \"difficulty\"}><ShowDifficulty editMode={editMode} song={song}\r\n                                                                                  difficulty={songProp.difficulty}/>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n                <div className={\"songdisplay__infos__right\"}>\r\n                    <div className={\"songdisplay__notes\"}>\r\n                        <h2>Notizen:</h2>\r\n                        <textarea name={\"notes\"} defaultValue={songProp.notes} onChange={event => {\r\n                            event.preventDefault();\r\n                            if (event.target.value !== notes || notes !== null) {\r\n                                setNotes(event.target.value);\r\n                            }\r\n                        }\r\n                        }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SongDisplay;","import \"./RandomSongButton.css\";\r\n\r\nfunction RandomSongButton({songList, setSelectedSong, setListView, setBackToList, backToList, setSearchValue}) {\r\n    return (\r\n        <p className=\"random__song__button\" onClick={() => {\r\n            let random = songList[Math.floor(Math.random() * songList.length)];\r\n            setSelectedSong(random);\r\n            setListView(false);\r\n            setBackToList(backToList);\r\n            setSearchValue(\"\");\r\n        }}>⟳</p>\r\n    )\r\n}\r\n\r\nexport default RandomSongButton;","import \"./Search.css\"\r\nimport RandomSongButton from \"../../Atoms/RandomSongButton/RandomSongButton\";\r\n\r\nfunction Search({\r\n                    songList,\r\n                    setSelectedSong,\r\n                    hideButtons,\r\n                    setAddScreen,\r\n                    setShowList,\r\n                    backToList,\r\n                    setBackToList,\r\n                    setSearchValue,\r\n                    id,\r\n                    defaultValue,\r\n                    autoFocus\r\n                }) {\r\n\r\n    if (hideButtons) {\r\n        return (\r\n            <div className=\"searchbar\">\r\n                <input type=\"text\" placeholder=\"Suche...\" onChange={event => {\r\n                    event.preventDefault();\r\n                    setSearchValue(event.target.value);\r\n                }} defaultValue={defaultValue}/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"search\">\r\n                <h1 id={\"button\"} onClick={() => {\r\n                    setSelectedSong(null);\r\n                    setShowList(false)\r\n                }\r\n                }>←</h1>\r\n                <div className=\"searchbar\">\r\n                    <input id={id} type=\"text\" placeholder=\"Suche...\" onChange={event => {\r\n                        event.preventDefault();\r\n                        setSearchValue(event.target.value);\r\n                    }} defaultValue={defaultValue} autoFocus={autoFocus}/>\r\n                </div>\r\n                <RandomSongButton songList={songList} setSelectedSong={setSelectedSong} setListView={setShowList}\r\n                                  setBackToList={setBackToList} backToList={backToList}\r\n                                  setSearchValue={setSearchValue}/>\r\n                <p className=\"add__button\" onClick={event => {\r\n                    event.preventDefault();\r\n                    setSearchValue(\"\");\r\n                    setSelectedSong(null);\r\n                    setAddScreen(true);\r\n                    setShowList(false);\r\n                }}>＋</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import \"./SongPreview.css\";\r\nimport Thumbnail from \"../../Atoms/Thumbnail/Thumbnail\";\r\nimport ShowDifficulty from \"../../Atoms/ShowDifficulty/ShowDifficulty\";\r\n\r\nfunction SongPreview({songProp, setSelectedSong, setBackToList, key}) {\r\n\r\n    return <div className={\"preview\"} onClick={event => {\r\n        setSelectedSong(songProp);\r\n        setBackToList(false);\r\n    }}>\r\n        <Thumbnail song={songProp} isLink={false}/>\r\n        <div className={\"preview__infos\"}>\r\n            <p><b>{songProp.title}</b><br/>{songProp.interpret}</p>\r\n            <ShowDifficulty editMode={false} difficulty={songProp.difficulty}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SongPreview;\r\n\r\n","import Search from \"../../Molecules/Search/Search\";\r\nimport \"./LandingPage.css\"\r\nimport {SongListService} from \"../../../Services/SongListService\";\r\nimport SongPreview from \"../../Molecules/SongPreview/SongPreview\";\r\n\r\nfunction LandingPage({setSelectedSong, setShowList, setBackToList, setSearchValue}) {\r\n\r\n    document.title = \"Sheet saver\";\r\n    return (\r\n        <div className={\"landingpage\"}>\r\n            <div className={\"landingpage__header\"}>\r\n                <Search hideButtons={true} setSearchValue={setSearchValue}/>\r\n            </div>\r\n            <div className={\"landingpage__songs\"}>\r\n                {SongListService.getRandomSongs(SongListService.songListSizeLandingPageCheck()).map(song => {\r\n                    return (\r\n                        <div key={song.title}><SongPreview songProp={song} setSelectedSong={setSelectedSong}\r\n                                                           setBackToList={setBackToList}/></div>)\r\n                })}\r\n\r\n            </div>\r\n            <div className={\"landingpage__showall\"}>\r\n                <p onClick={event => {\r\n                    event.preventDefault();\r\n                    setShowList(true);\r\n                }}>Alle Songs anzeigen</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LandingPage;","import {useEffect, useState} from \"react\";\r\nimport \"./AddSongScreen.css\"\r\n\r\nfunction AddSongScreen({setListView, setAddSong, addSongHandler}) {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [interpret, setinterpret] = useState(\"\");\r\n    const [difficulty, setDifficulty] = useState(1)\r\n    const [isReady, setIsReady] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        if (title !== \"\" && interpret !== \"\") {\r\n            setIsReady(true);\r\n        } else {\r\n            setIsReady(false);\r\n        }\r\n\r\n    }, [title, interpret])\r\n\r\n    const onSaveHandler = (event) => {\r\n        event.preventDefault();\r\n        if (isReady) {\r\n            addSongHandler({\r\n                title,\r\n                interpret,\r\n                difficulty,\r\n                youtube: [],\r\n                sheetMusic: [],\r\n                notes: ''\r\n            });\r\n\r\n            setListView(true);\r\n            setAddSong(false);\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return <div className={\"addsong\"}>\r\n        <div className={\"addsong__header\"}>\r\n            <h1 id=\"back__button\" onClick={event => {\r\n                setListView(true);\r\n                setAddSong(false);\r\n            }\r\n            }>←</h1>\r\n            <h1>Füge einen neuen Song hinzu:</h1>\r\n        </div>\r\n        <div className={\"addsong__form\"}>\r\n            <form onSubmit={onSaveHandler}>\r\n                <label>\r\n                    Titel:<br/>\r\n                    <input type={\"text\"} onChange={event => {\r\n                        setTitle(event.target.value);\r\n                    }\r\n                    }/>\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    Interpret:<br/>\r\n                    <input type={\"text\"} onChange={event => {\r\n                        setinterpret(event.target.value);\r\n                    }\r\n                    }/>\r\n                </label>\r\n                <p style={{marginBottom: \"0\"}}>Schwierigkeit:</p>\r\n                <div className={\"addsong__difficulty\"}>\r\n                    {[1, 2, 3, 4, 5].map(score => {\r\n                        if (score <= difficulty) {\r\n                            return <p key={score} onClick={event => {\r\n                                event.preventDefault();\r\n                                setDifficulty(score);\r\n                            }\r\n                            }>★</p>\r\n                        } else {\r\n                            return <p key={score} onClick={event => {\r\n                                event.preventDefault();\r\n                                setDifficulty(score);\r\n                            }\r\n                            }>☆</p>\r\n                        }\r\n                    })}\r\n\r\n                </div>\r\n                <div>\r\n                    <button type={\"submit\"} style={isReady ? {} : {visibility: \"hidden\"}}>\r\n                        Fertig!\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default AddSongScreen;","import \"./SongList.css\"\r\nimport ShowDifficulty from \"../../Atoms/ShowDifficulty/ShowDifficulty\";\r\n\r\n\r\nfunction SongList({songList, setSelectedSong, setShowList, setBackToList}) {\r\n\r\n    const tableRow = (song, color) => {\r\n        return (<tr key={song.title} className={\"songlist__row\"} style={color ? {} : {backgroundColor: \"lightgray\"}}\r\n                    onClick={() => {\r\n                        setSelectedSong(song);\r\n                        setShowList(false);\r\n                        setBackToList(true);\r\n                    }}\r\n        >\r\n            <td>{song.title}</td>\r\n            <td>{song.interpret}</td>\r\n            <td><ShowDifficulty editMode={false} difficulty={song.difficulty}/></td>\r\n            {/*Tags*/}\r\n        </tr>)\r\n    }\r\n\r\n    let color = true;\r\n\r\n    return (\r\n        <div className=\"songlist\">\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Titel</th>\r\n                    <th>Interpret</th>\r\n                    <th>Schwierigkeit</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {songList.map(song => {\r\n                        color = !color;\r\n                        return (tableRow(song, color));\r\n                    }\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongList;","import Search from \"../../Molecules/Search/Search\";\r\nimport SongList from \"../../Molecules/SongList/SongList\";\r\nimport \"./AllSongsOverview.css\"\r\n\r\nfunction AllSongsOverview({\r\n                              songList,\r\n                              setSelectedSong,\r\n                              setShowListView,\r\n                              setShowAddScreen,\r\n                              setBackToList,\r\n                              setSearchValue,\r\n                              searchValue\r\n                          }) {\r\n\r\n    let aFocus = searchValue != null && searchValue !== \"\";\r\n    document.title = \"Sheet saver\"\r\n\r\n    return (\r\n        <div className={\"overview\"}>\r\n            <Search id={\"songlist__search\"} songList={songList} setSelectedSong={setSelectedSong} hideButtons={false}\r\n                    setShowList={setShowListView} setAddScreen={setShowAddScreen} backToList={true}\r\n                    setBackToList={setBackToList} setSearchValue={setSearchValue} defaultValue={searchValue}\r\n                    autoFocus={aFocus}/>\r\n            <SongList songList={songList} setSelectedSong={setSelectedSong} setShowList={setShowListView}\r\n                      setBackToList={setBackToList}/>\r\n        </div>)\r\n}\r\n\r\nexport default AllSongsOverview;","import {useEffect, useState} from \"react\";\r\nimport SongDisplay from \"../SongDisplay/SongDisplay\";\r\nimport LandingPage from \"../LandingPage/LandingPage\";\r\nimport AddSongScreen from \"../AddSongScreen/AddSongScreen\";\r\nimport {SongListService} from \"../../../Services/SongListService\";\r\nimport AllSongsOverview from \"../AllSongsOverview/AllSongsOverview\";\r\nimport {filter} from 'lodash';\r\n\r\nfunction Overview({songListProp}) {\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [songListSearch, setSongListSearch] = useState(SongListService.getIntialList());\r\n    const [selectedSong, setSelectedSong] = useState(null);\r\n    const [showListView, setShowListView] = useState(false);\r\n    const [showAddScreen, setShowAddScreen] = useState(false);\r\n    const [backToList, setBackToList] = useState(false);\r\n    const [songList, setSongList] = useState(songListProp);\r\n\r\n    const updateSongList = (songList) => {\r\n        setSongList(songList);\r\n        SongListService.updateSongList(songList);\r\n    }\r\n\r\n    const addSong = (song) => {\r\n        updateSongList([...songList, song])\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showListView === false) {\r\n            if (searchValue !== \"\" || searchValue == null) {\r\n                setShowListView(true);\r\n                setSelectedSong(null);\r\n            }\r\n        }\r\n        const localSearchValue = searchValue.toLowerCase()\r\n        let filteredSongList;\r\n        if (localSearchValue !== \"\") {\r\n            filteredSongList = filter(songListProp, (song => {\r\n                return song.title.toLowerCase().match(localSearchValue) || song.interpret.toLowerCase().match(localSearchValue);\r\n            }));\r\n        } else {\r\n            filteredSongList = songListProp;\r\n            setSongListSearch(songListProp);\r\n        }\r\n        setSongListSearch(filteredSongList);\r\n        // eslint-disable-next-line\r\n    }, [searchValue])\r\n\r\n    useEffect(() => {\r\n        if (selectedSong != null) {\r\n            setSearchValue(\"\");\r\n            setSongListSearch(songListProp);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [selectedSong])\r\n\r\n    if (showListView || showAddScreen) {\r\n        return showListView ? (<AllSongsOverview setShowAddScreen={setShowAddScreen} setShowListView={setShowListView}\r\n                                                 setBackToList={setBackToList} songList={songListSearch}\r\n                                                 setSelectedSong={setSelectedSong} setSearchValue={setSearchValue}\r\n                                                 searchValue={searchValue}/>) :\r\n            <AddSongScreen addSongHandler={addSong} setListView={setShowListView} setAddSong={setShowAddScreen}/>\r\n    } else {\r\n        if (selectedSong) {\r\n            return <SongDisplay songProp={selectedSong} setSelectedSong={setSelectedSong} setShowList={setShowListView}\r\n                                backToList={backToList}/>\r\n        } else {\r\n            return <LandingPage setSelectedSong={setSelectedSong} setShowList={setShowListView}\r\n                                setBackToList={setBackToList} setSearchValue={setSearchValue}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Overview;","import './App.css';\r\nimport Overview from \"./components/Organism/Overview/Overview\";\r\n\r\nfunction App({songList}) {\r\n    return (\r\n        <div className=\"App\">\r\n            <Overview songListProp={songList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {SongListService} from \"./Services/SongListService\";\r\n\r\nconst initial = SongListService.getIntialList();\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App songList={initial}/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}